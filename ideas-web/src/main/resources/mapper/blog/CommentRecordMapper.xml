<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenhao.dao.mapper.CommentRecordMapper">
  <resultMap id="BaseResultMap" type="com.chenhao.dao.entity.CommentRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pId" jdbcType="BIGINT" property="pid" />
    <result column="articleId" jdbcType="BIGINT" property="articleid" />
    <result column="answererId" jdbcType="INTEGER" property="answererid" />
    <result column="respondentId" jdbcType="INTEGER" property="respondentid" />
    <result column="commentDate" jdbcType="VARCHAR" property="commentdate" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="isRead" jdbcType="BIT" property="isread" />
    <result column="is_active" jdbcType="INTEGER" property="isActive" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.chenhao.dao.entity.CommentRecord">
    <result column="commentContent" jdbcType="LONGVARCHAR" property="commentcontent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pId, articleId, answererId, respondentId, commentDate, likes, isRead, is_active
  </sql>
  <sql id="Blob_Column_List">
    commentContent
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.chenhao.dao.entity.CommentRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.chenhao.dao.entity.CommentRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chenhao.dao.entity.CommentRecordExample">
    delete from comment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chenhao.dao.entity.CommentRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment_record (pId, articleId, answererId, 
      respondentId, commentDate, likes, 
      isRead, is_active, commentContent
      )
    values (#{pid,jdbcType=BIGINT}, #{articleid,jdbcType=BIGINT}, #{answererid,jdbcType=INTEGER}, 
      #{respondentid,jdbcType=INTEGER}, #{commentdate,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, 
      #{isread,jdbcType=BIT}, #{isActive,jdbcType=INTEGER}, #{commentcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chenhao.dao.entity.CommentRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pId,
      </if>
      <if test="articleid != null">
        articleId,
      </if>
      <if test="answererid != null">
        answererId,
      </if>
      <if test="respondentid != null">
        respondentId,
      </if>
      <if test="commentdate != null">
        commentDate,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="isread != null">
        isRead,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="commentcontent != null">
        commentContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null">
        #{articleid,jdbcType=BIGINT},
      </if>
      <if test="answererid != null">
        #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null">
        #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null">
        #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=BIT},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null">
        #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chenhao.dao.entity.CommentRecordExample" resultType="java.lang.Long">
    select count(*) from comment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null">
        pId = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.articleid != null">
        articleId = #{record.articleid,jdbcType=BIGINT},
      </if>
      <if test="record.answererid != null">
        answererId = #{record.answererid,jdbcType=INTEGER},
      </if>
      <if test="record.respondentid != null">
        respondentId = #{record.respondentid,jdbcType=INTEGER},
      </if>
      <if test="record.commentdate != null">
        commentDate = #{record.commentdate,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.isread != null">
        isRead = #{record.isread,jdbcType=BIT},
      </if>
      <if test="record.isActive != null">
        is_active = #{record.isActive,jdbcType=INTEGER},
      </if>
      <if test="record.commentcontent != null">
        commentContent = #{record.commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment_record
    set id = #{record.id,jdbcType=BIGINT},
      pId = #{record.pid,jdbcType=BIGINT},
      articleId = #{record.articleid,jdbcType=BIGINT},
      answererId = #{record.answererid,jdbcType=INTEGER},
      respondentId = #{record.respondentid,jdbcType=INTEGER},
      commentDate = #{record.commentdate,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      isRead = #{record.isread,jdbcType=BIT},
      is_active = #{record.isActive,jdbcType=INTEGER},
      commentContent = #{record.commentcontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment_record
    set id = #{record.id,jdbcType=BIGINT},
      pId = #{record.pid,jdbcType=BIGINT},
      articleId = #{record.articleid,jdbcType=BIGINT},
      answererId = #{record.answererid,jdbcType=INTEGER},
      respondentId = #{record.respondentid,jdbcType=INTEGER},
      commentDate = #{record.commentdate,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      isRead = #{record.isread,jdbcType=BIT},
      is_active = #{record.isActive,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chenhao.dao.entity.CommentRecord">
    update comment_record
    <set>
      <if test="pid != null">
        pId = #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null">
        articleId = #{articleid,jdbcType=BIGINT},
      </if>
      <if test="answererid != null">
        answererId = #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null">
        respondentId = #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null">
        commentDate = #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="isread != null">
        isRead = #{isread,jdbcType=BIT},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null">
        commentContent = #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chenhao.dao.entity.CommentRecord">
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      isRead = #{isread,jdbcType=BIT},
      is_active = #{isActive,jdbcType=INTEGER},
      commentContent = #{commentcontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chenhao.dao.entity.CommentRecord">
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      isRead = #{isread,jdbcType=BIT},
      is_active = #{isActive,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>